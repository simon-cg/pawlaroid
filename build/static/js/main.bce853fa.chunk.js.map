{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Login.js","comps/Features.js","App.js","index.js"],"names":["Title","className","role","aria-label","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","htmlFor","type","id","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","ImageGrid","setSelectedImg","map","layout","whileHover","opacity","s","key","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","Login","email","setEmail","password","setPassword","showPass","isInvalid","method","onSubmit","preventDefault","Stack","maxWidth","margin","spacing","marginTop","FormControl","FormLabel","Input","isRequired","aria-describedby","value","FormHelperText","autoComplete","Button","disabled","Features","React","show","setShow","Collapse","mt","isOpen","List","icon","App","ThemeProvider","CSSReset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bce853fa.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Pawlaroid<span role=\"img\" aria-label=\"paw prints\">🐾</span></h1>\n      <h2>recent uploads</h2>\n      <p>Tau | Lurcher | 2 years old</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore'; \r\n \r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDrTmegSTHGI_0peoopzwg7VfCysF6lKO0\",\r\n  authDomain: \"tau-now.firebaseapp.com\",\r\n  databaseURL: \"https://tau-now.firebaseio.com\",\r\n  projectId: \"tau-now\",\r\n  storageBucket: \"tau-now.appspot.com\",\r\n  messagingSenderId: \"1052839433783\",\r\n  appId: \"1:1052839433783:web:3a6b2f987b486ff465d1b2\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n    const [ progress, setProgress ] = useState(0);\r\n    const [ error, setError ] = useState(null);\r\n    const [ url, setUrl ] = useState(null);\r\n\r\n    useEffect(() => {\r\n    \r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            await collectionRef.add({ url, createdAt });\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n    return { progress, url, error }\r\n\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n    const { url, progress } = useStorage(file);\r\n    \r\n    useEffect(() => {\r\n        if (url) {\r\n            setFile(null);\r\n        }\r\n    }, [url, setFile])\r\n\r\n    return (\r\n        <motion.div className=\"progress-bar\"\r\n            initial={{ width: 0 }}\r\n            animate={{ width: progress + '%' }}\r\n        ></motion.div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProgressBar;","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const types = ['image/png', 'image/jpeg'];\r\n\r\n    const handleChange = (e) => {\r\n\r\n        let selected = e.target.files[0];\r\n\r\n        if (selected && types.includes(selected.type)) {\r\n            setFile(selected);\r\n            setError('');\r\n        } else {\r\n            setFile(null);\r\n            setError('try a valid image file');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <label className=\"active\" htmlFor=\"file\">\r\n                <input type=\"file\" id=\"file\" onChange={handleChange} />\r\n                <span role=\"img\" aria-label=\"camera icon\">📷</span>\r\n            </label>\r\n                <div className=\"output\">\r\n                    { error && <div className=\"error\">{ error }</div> }\r\n                    { file && <div>{ file.name }</div> }\r\n                    { file && <ProgressBar file={file} setFile={setFile} /> }\r\n                </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UploadForm;","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n    \r\n    const [docs, setDocs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot(snap => {\r\n                let documents = [];\r\n                snap.forEach(doc => {\r\n                    documents.push({...doc.data(), id: doc.id});\r\n                });\r\n                setDocs(documents);\r\n            });\r\n\r\n        return () => unsub();\r\n\r\n    }, [collection]);\r\n\r\n    return { docs };\r\n}\r\n\r\nexport default useFirestore;","import React from'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n    \r\n    const { docs } = useFirestore('images');\r\n    \r\n    return (\r\n        <div className=\"img-grid\">\r\n            { docs && docs.map(doc => (\r\n                <motion.div className=\"img-wrap\"\r\n                layout\r\n                whileHover={{ opacity: 1 }}s\r\n                key={doc.id}\r\n                onClick={() => setSelectedImg(doc.url)}\r\n                >\r\n                    <motion.img src={doc.url}\r\n                        alt=\"upload relating to their dog\"\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}    \r\n                        transition={{ delay: 1 }}\r\n                    />\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({ selectedImg, setSelectedImg }) => {\r\n\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.contains('backdrop')){\r\n            setSelectedImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div className=\"backdrop\"\r\n            onClick={handleClick}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            ><motion.img src={selectedImg}\r\n            initial={{ y: \"-100vh\" }}\r\n            animate={{ y: 0 }}\r\n            alt=\"enlarged popup with faded backdrop\" />\r\n        </motion.div>\r\n    )\r\n\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport { Stack,\r\n    Button, \r\n    FormControl, \r\n    FormLabel, \r\n    FormHelperText, \r\n    Input \r\n    } from '@chakra-ui/core';\r\n\r\nexport default function Login() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPass, setShow] = useState(false);\r\n    const isInvalid = password === '' || email === '';\r\n\r\n    const handleSignIn = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <form method=\"POST\" onSubmit={handleSignIn}>\r\n            <Stack maxWidth={600} margin=\"auto\" spacing={5} marginTop={5}>\r\n                <FormControl>\r\n                    <FormLabel htmlFor=\"email\">\r\n                        e-mail\r\n                    </FormLabel>\r\n                    <Input isRequired\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        aria-describedby=\"email-helper-text\"\r\n                        value={email}\r\n                        onChange={({target}) => setEmail(target.value)}/>\r\n                    <FormHelperText id=\"email-helper-text\">\r\n                        your registered e-mail address\r\n                    </FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <FormLabel htmlFor=\"password\">\r\n                        password\r\n                    </FormLabel>\r\n                    <Input isRequired\r\n                        type={showPass ? 'text' : 'password'}\r\n                        id=\"password\"\r\n                        aria-describedby=\"password-helper-text\"\r\n                        value={password}\r\n                        autoComplete=\"off\"\r\n                        onChange={({target}) => setPassword(target.value)}/>\r\n                    <FormHelperText id=\"email-helper-text\">\r\n                        the password you signed up with\r\n                    </FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Button type=\"submit\" disabled={isInvalid}>sign in</Button>\r\n                </FormControl>\r\n            </Stack>\r\n        </form>\r\n    )\r\n    //     <form method=\"POST\" onSubmit={handleSignIn}>\r\n    //         <input required\r\n    //         type=\"text\"\r\n    //         placeholder=\"e-mail address\"\r\n    //         value={email}\r\n    //         onChange={({target}) => setEmail(target.value)}/>\r\n\r\n    //         <input required\r\n    //         type=\"password\"\r\n    //         placeholder=\"password\"\r\n    //         value={password}\r\n    //         autoComplete=\"off\"\r\n    //         onChange={({target}) => setPassword(target.value)}/>\r\n            \r\n    //         <button type=\"submit\" disabled={isInvalid}>sign in</button>\r\n    //     </form>\r\n    //\r\n}","import React from 'react';\r\nimport { Collapse,\r\n    Stack,\r\n    Button,\r\n    List,\r\n    ListItem,\r\n    ListIcon\r\n    } from '@chakra-ui/core';\r\n\r\nexport default function Features() {\r\n    const [show, setShow] = React.useState(false);\r\n\r\n    const handleToggle = () => setShow(!show);\r\n  \r\n    return (\r\n      <>\r\n      <Stack maxWidth={600} margin=\"auto\" spacing={5} marginTop={5}>\r\n        <Button onClick={handleToggle} margin=\"auto\">\r\n          Pending Features\r\n        </Button>\r\n        <Collapse mt={4} isOpen={show}>\r\n        <List spacing={3}>\r\n            <ListItem>\r\n            <ListIcon icon=\"settings\" />\r\n                Implement user authentication\r\n            </ListItem>\r\n            <ListItem>\r\n            <ListIcon icon=\"settings\" />\r\n                Modal scrolling arrow buttons\r\n            </ListItem>\r\n            <ListItem>\r\n            <ListIcon icon=\"settings\" />\r\n                Improve thumbnails (better representation of whole photo)\r\n            </ListItem>\r\n            <ListItem>\r\n            <ListIcon icon=\"settings\"/>\r\n                Thumbnail image bordering and shadowing, and reducing grid gap?\r\n            </ListItem>\r\n            <ListItem>\r\n            <ListIcon icon=\"settings\"/>\r\n                Allow set bulk import of images from Instagram account.\r\n            </ListItem>\r\n            <ListItem>\r\n            <ListIcon icon=\"settings\"/>\r\n                Dynamically sourced fields with dropdowns for dog age and breed.\r\n            </ListItem>\r\n        </List>\r\n        </Collapse>\r\n        </Stack>\r\n      </>\r\n    );\r\n  }","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\nimport Login from './comps/Login';\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core';\nimport Features from './comps/Features';\n\nfunction App() {\n\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <ThemeProvider>\n        <CSSReset />\n      <Features />\n      <Login />\n      </ThemeProvider>\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && (\n        <Modal\n        selectedImg={selectedImg}\n        setSelectedImg={setSelectedImg}\n        />) }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}